<?php
$theme = wp_get_theme();
define( 'CHILD_DOMAIN', $theme->get( 'TextDomain' ) );
define( 'CHILD_THEME_VERSION', $theme->Version );
define( 'CHILD_THEME_NAME', $theme->Name );
define( 'CHILD_THEME_NAME_WS', preg_replace( "/[\/_| -]+/u", '-', strtolower( trim( preg_replace( "/[^a-zA-Z0-9\/_| -]/u", '', CHILD_THEME_NAME ), '-' ) ) ) );
define( 'CHILD_THEME_TAGLINE', '&mdash; A powerpacked raw canvas to build upon!' );
define( 'CHILD_SETTINGS_FIELD', CHILD_THEME_NAME_WS . '-settings' );
define( 'CHILD_SETTINGS_FIELD_EXTRAS', CHILD_THEME_NAME_WS . '-admin' );
define( 'CHILD_THEME_URL', $theme->get( 'ThemeURI' ) );
define( 'CHILD_DEVELOPER', $theme->Author );
define( 'CHILD_DEVELOPER_URL', $theme->{'Author URI'} );
define( 'CHILD_LIB_DIR', CHILD_DIR . '/lib' );
define( 'CHILD_IMAGES_DIR', CHILD_DIR . '/images' );
define( 'CHILD_ADMIN_DIR', CHILD_LIB_DIR . '/admin' );
define( 'CHILD_JS_DIR', CHILD_LIB_DIR . '/js' );
define( 'CHILD_CSS_DIR', CHILD_LIB_DIR . '/css' );
define( 'CHILD_LIB', CHILD_URL . '/lib' );
define( 'CHILD_IMAGES', CHILD_URL . '/images' );
define( 'CHILD_ADMIN', CHILD_LIB . '/admin' );
define( 'CHILD_JS', CHILD_LIB . '/js' );
define( 'CHILD_CSS', CHILD_LIB . '/css' );
define( 'LANDER_CORE_DESIGNS', CHILD_DIR . '/designs' );
define( 'LANDER_CORE_DESIGNS_URL', CHILD_URL . '/designs' );
define( 'UPDATE_URL', 'https://www.binaryturf.com?action=get_metadata&slug='.get_stylesheet() );
define( 'LANDER_THEME_SLUG', get_stylesheet());

require_once( CHILD_DIR . '/lib/admin/lander-admin.php' );
require_once( CHILD_DIR . '/lib/admin/lander-design-settings.php' );
require_once( CHILD_DIR . '/lib/functions/misc.php' );
require_once( CHILD_DIR . '/lib/functions/init.php' );
require_once( CHILD_DIR . '/lib/functions/css-gen.php' );
require_once( 'lib_scssphp/scss.inc.php' );
require( CHILD_DIR . '/update/update-checker.php' );
require( CHILD_DIR . '/update/upgrader.php' );

$lander_update_checker = new ThemeUpdateChecker( LANDER_THEME_SLUG, UPDATE_URL );

//llog($lander_update_checker->enableAutomaticChecking);


add_action( 'after_switch_theme', 'lander_generate_css' );
add_action( "update_option_".CHILD_SETTINGS_FIELD_EXTRAS, 'lander_generate_design_css');
add_action( 'admin_notices', 'lander_welcome' );

function lander_generate_design_css(){
	lander_generate_css( get_option( CHILD_SETTINGS_FIELD ) );
}

add_filter( 'genesis_footer_output', 'lander_footer_output', 10, 3 );
add_filter( 'body_class', 'lander_body_classes' );
add_filter( 'admin_body_class', 'lander_admin_body_classes' );
add_filter( 'genesis_attr_entry-image', 'lander_attributes_entry_image', 999 ); // adds lander-alignnone class to content archives featured image if alignment is set as none
add_filter( 'http_request_args', 'lander_dont_update_theme', 5, 2 );
//add_action( 'wp_enqueue_scripts', 'lander_semantic_ui', 5 );

add_filter( 'stylesheet_uri','lander_stylesheet_min', 10, 2 );
add_action( 'wp_enqueue_scripts', 'lander_settings_css' );			// the css generated by lander design settings / crunched
add_action( 'wp_enqueue_scripts', 'lander_customizations_css' );	// the design style for themes lander-base/designs / 
add_action( 'wp_enqueue_scripts', 'lander_user_css' );				// the autogenerated css from lander-user folder
add_action( 'admin_init', 'lander_redir_settings', 20 );
add_action( 'genesis_admin_menu', 'lander_admin_menu_pages', 5 );
add_action( 'get_header', 'lander_scss_compile' );
add_action( 'admin_head', 'lander_scss_compile' );

add_action('login_head', 'genesis_load_favicon');
add_action('admin_head', 'genesis_load_favicon');


function lander_stylesheet_min( $stylesheet_uri, $stylesheet_dir_uri){

	if(!current_user_can('update_themes')) {
		$stylesheet_uri = $stylesheet_dir_uri . '/style.min.css';
	}

	return $stylesheet_uri;
}

//add_action( 'init', 'lander_post_type_support_post_meta', 12 );
/**
 * Add post type support for post meta to all post types except page.
 *
 * @since 2.2.0
 */
function lander_post_type_support_post_meta() {

	$public_post_types = get_post_types( array( 'public' => true ) );

	foreach ( $public_post_types as $post_type ) {
		
			add_post_type_support( $post_type, 'genesis-entry-meta-before-content' );
			// add_post_type_support( $post_type, 'genesis-entry-meta-after-content' );
		}
	//}

	

}

function lander_scss_compile() {
	if ( !current_user_can( 'update_themes' ) ) {
		return;
	}
	$scss = new scssc();
	
	if ( file_exists( CHILD_DIR . '/lib/stylesheet-core/style.scss' ) ) {
		if ( filemtime( CHILD_DIR . '/lib/stylesheet-core/style.scss' ) > filemtime( CHILD_DIR . '/style.css' ) ) {


			$css = "\n\n";
			
			
			$scss->setFormatter( 'scss_formatter' );
			$css .= $scss->compile( '@import "' . CHILD_DIR . '/lib/stylesheet-core/style.scss' . '"' );
			file_put_contents( CHILD_DIR . '/style.css', $css );
			
			
			$scss->setFormatter( 'scss_formatter_crunched' );
			$cssmin = $scss->compile( '@import "' . CHILD_DIR . '/lib/stylesheet-core/style.scss' . '"' );
			file_put_contents( CHILD_DIR . '/style.min.css', $cssmin );

			if ( function_exists( 'w3tc_browsercache_flush' ) ) { //check if W3Total cache is installed and active
				w3tc_browsercache_flush(); //flush the w3tc browser cache to fetch the new css
			}
		}
	}

	if ( file_exists( LANDER_CORE_DESIGNS . '/style.scss' ) ) {
		if ( filemtime( LANDER_CORE_DESIGNS . '/style.scss' ) > @filemtime( LANDER_CORE_DESIGNS . '/autogenerated.css' ) ) {
			$css = "@charset \"UTF-8\"; \n\n/*D*********************************************************************************\n******************** Make all your changes to style.scss **************************\n**** This file will be overwritten by style.scss and your changes will be lost ****\n**********************************************************************************/\n\n";

			$scss->setFormatter( 'scss_formatter_crunched' );

			$css .= $scss->compile( '@import "' . LANDER_CORE_DESIGNS . '/style.scss' . '"' );
			file_put_contents( LANDER_CORE_DESIGNS . '/autogenerated.css', $css );
			if ( function_exists( 'w3tc_browsercache_flush' ) ) { //check if W3Total cache is installed and active
				w3tc_browsercache_flush(); //flush the w3tc browser cache to fetch the new css
			}
		}
	}

	$user_dir = lander_get_res( 'dir' );

	if ( file_exists( $user_dir . 'style.scss' ) ) {
		if ( filemtime( $user_dir . 'style.scss' ) > @filemtime( $user_dir . 'autogenerated.css' ) ) {
			$css = "@charset \"UTF-8\"; \n\n/*U********************************************************************************\n******************** Make all your changes to style.scss **************************\n**** This file will be overwritten by style.scss and your changes will be lost ****\n**********************************************************************************/\n\n";
			$scss->setFormatter( 'scss_formatter_crunched' );
			$css .= $scss->compile( '@import "' . $user_dir . 'style.scss' . '"' );
			file_put_contents( $user_dir . 'autogenerated.css', $css );
			if ( function_exists( 'w3tc_browsercache_flush' ) ) { //check if W3Total cache is installed and active
				w3tc_browsercache_flush(); //flush the w3tc browser cache to fetch the new css
			}
		}
	}
}

class scss_formatter_ex extends \Leafo\ScssPhp\Formatter\Nested {
	public function __construct() {
		$this->indentLevel     = 0;
		$this->indentChar      = "\t";
		$this->break           = "\n";
		$this->open            = ' {';
		$this->close           = " }";
		$this->tagSeparator    = ",\n";
		$this->assignSeparator = ': ';
	}
}

/* Include core design files */
if ( file_exists( LANDER_CORE_DESIGNS . '/functions.php' ) ) {
	include_once LANDER_CORE_DESIGNS.'/functions.php';
}

/* Include user design files */
if ( genesis_get_option( 'custom-functions-enabled', CHILD_SETTINGS_FIELD_EXTRAS, false ) ) {
	@include_once lander_get_res( 'file', 'userphp' );
}


/**
 * Display welcome messages when installed/updated
 * @return null
 */
function lander_welcome() {
	if( !genesis_is_menu_page( 'genesis_page_' . CHILD_SETTINGS_FIELD ) ) {
		return;
	}
	
	if( isset( $_REQUEST['installed'] ) && 'true' == $_REQUEST['installed'] ) {
	?>
		<div class="updated">
		<p><?php printf( __( '%sYou\'re now rocking %s %s' , CHILD_DOMAIN ), '<strong>',  CHILD_THEME_NAME, CHILD_THEME_TAGLINE . '</strong>' ); ?></p>
		</div>
	<?php
	}
}

/* Builds Lander admin menu pages */

function lander_admin_menu_pages() {
	
	if( !is_admin() )
		return;
	
	if ( current_theme_supports( 'lander-deploy' ) )
		return;
	
	global $_lander_admin_extras, $_lander_admin_design_settings;
	
	if( !current_theme_supports( 'lander-admin-deploy' ) )
		$_lander_admin_extras = new Lander_Extras;
	
	if( !current_theme_supports( 'lander-design-deploy' ) )
		$_lander_admin_design_settings = new Lander_Design_Settings;
	
}